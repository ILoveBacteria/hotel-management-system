services:
  web:
    build: .
    restart: always
    env_file:
      - .env
    volumes:
      - static_files_volume:/usr/src/app/staticfiles:rw
      - media_files_volume:/usr/src/app/media:rw
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: curl --fail http://localhost:8000/ || exit 1
      interval: 5s
      timeout: 5s
      retries: 5

  proxy:
    image: nginx:1.25
    restart: always
    ports:
      - "127.0.0.1:2003:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static_files_volume:/usr/share/nginx/html/static/:ro
      - media_files_volume:/usr/share/nginx/html/media/:ro
    depends_on: 
      web:
        condition: service_healthy

  postgres:
    build: ./postgres
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - ./db:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U postgres
      interval: 5s
      timeout: 5s
      retries: 5

  sonarqube:
    image: sonarqube:community
    restart: always
    env_file:
      - .env
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://postgres:5432/sonarqube
      - SONAR_JDBC_USERNAME=${POSTGRES_USER}
      - SONAR_JDBC_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "127.0.0.1:9000:9000"
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: curl --fail http://localhost:9000/ || exit 1
      interval: 5s
      timeout: 5s
      retries: 5


volumes:
  static_files_volume:
  media_files_volume:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
